option name = "fabric-crossconnect";
option app_label = "fabric-crossconnect";
option legacy = "True";

message FabricCrossconnectService (Service){
    option verbose_name = "Fabric Crossconnect Service";
    option description = "Service that implements connectivity through the aggregation switch by crossconnecting ports";
}

message FabricCrossconnectServiceInstance (ServiceInstance){
    option verbose_name = "Fabric Crossconnect Service Instance";
    option owner_class_name = "FabricCrossconnectService";
    option description = "Tenancy in the fabric crossconnect service, representing one s-tag routed through the agg switch";
    option policy_implemented = "True";
    option sync_implemented = "True";

    required int32 s_tag = 1 [
        help_text = "vlan tag of packets to crossconnect"];
    required string switch_datapath_id = 2 [
        help_text = "Datapath id of switch where crossconnect will be installed",
        content_type = "stripped",
        max_length=256];
    required int32 source_port = 3 [
        help_text = "switch port where access device or VM is connected"];
}

message BNGPortMapping (XOSBase) {
    required string s_tag = 1 [
        help_text = "Single s-tag, range of s-tags, or 'ANY'",
        max_length = 1024,
        tosca_key = True,
        unique = True];
    required int32 switch_port = 2 [
        help_text = "Switch port where BNG or other egress point is connected"];
}
